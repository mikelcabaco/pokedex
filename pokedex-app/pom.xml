<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.1.2</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.heytrade</groupId>
	<artifactId>pokedex</artifactId>
	<version>1.1.0</version>
	<name>pokedex</name>
	<description>Pokedex project</description>
	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.javadoc.outputEncoding>UTF-8</project.javadoc.outputEncoding>
		
		<!-- Package name -->
		<project.final.name>pokedex</project.final.name>
		
		<!-- Dependencies versions -->
		<mybatis-spring-boot-starter.version>3.0.2</mybatis-spring-boot-starter.version>
		<logback-ecs-encoder.version>1.5.0</logback-ecs-encoder.version>
		<swagger.version>2.2.0</swagger.version>
		<bouncycastle.version>1.76</bouncycastle.version>
		<beanutils.version>1.9.4</beanutils.version>
		<equalsverifier.version>3.15.1</equalsverifier.version>
		
		<!-- Test result settings -->
		<jacoco-maven-plugin.version>0.8.10</jacoco-maven-plugin.version>
		<jacoco.execution.data.dir>${project.build.directory}/coverage-reports</jacoco.execution.data.dir>
		<jacoco.it.execution.data.file>${jacoco.execution.data.dir}/jacoco-it.exec</jacoco.it.execution.data.file>
		<jacoco.ut.execution.data.file>${jacoco.execution.data.dir}/jacoco-ut.exec</jacoco.ut.execution.data.file>
		<jacoco.execution.data.file>${project.build.directory}/jacoco.exec</jacoco.execution.data.file>
		<jacoco.execution.report.dir>${project.build.directory}/site/jacoco</jacoco.execution.report.dir>
		<skip.surefire.tests>false</skip.surefire.tests>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<!-- Mybatis -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>${mybatis-spring-boot-starter.version}</version>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>co.elastic.logging</groupId>
			<artifactId>logback-ecs-encoder</artifactId>
			<version>${logback-ecs-encoder.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		
		<!-- Swagger UI -->
		<dependency>
    		<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk18on</artifactId>
			<version>${bouncycastle.version}</version>
		</dependency>
		
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${beanutils.version}</version>
		</dependency>

		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-testcontainers</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>${equalsverifier.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			
			<!-- Unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<testFailureIgnore>false</testFailureIgnore>
					<skipTests>${skip.surefire.tests}</skipTests>
					<!-- Excludes integration tests when unit tests are run. -->
					<excludes>
						<exclude>**/*TestIT.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			
			<!-- Integration tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<forkCount>1</forkCount>
					<reuseForks>true</reuseForks>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<useSystemClassLoader>true</useSystemClassLoader>
						<skipTests>${skip.surefire.tests}</skipTests>
					<includes>
						<include>**/*TestIT.java</include>
					</includes>
					<excludes>
						<exclude>**/*Test.java</exclude>
					</excludes>
				</configuration>
				<goals>
					<goal>integration-test</goal>
				</goals>
			</plugin>
			
			<!-- Coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.ut.execution.data.file}</destFile>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${jacoco.it.execution.data.file}</destFile>
						</configuration>
					</execution>
					<execution>
						<id>merge-unit-and-integration</id>
						<phase>verify</phase>
						<goals>
							<goal>merge</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<directory>${jacoco.execution.data.dir}/</directory>
									<includes>
										<include>*.exec</include>
									</includes>
								</fileSet>
							</fileSets>
							<destFile>${jacoco.execution.data.file}</destFile>
						</configuration>
					</execution>
					<execution>
						<id>create-merged-report</id>
						<phase>verify</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.execution.data.file}</dataFile>
							<outputDirectory>${jacoco.execution.report.dir}</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
